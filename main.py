import sys
from product_manager import ProductManager  # Ensure this import statement is correct
from product import Product  # Ensure this import statement is correct

def get_valid_float(prompt: str) -> float:
    """
    ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ float ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    """
    while True:
        try:
            value = float(input(prompt).strip())
            if value > 0:
                return value
            print("‚ùå Error: Value must be greater than 0!")
        except ValueError:
            print("‚ùå Error: Please enter a valid number!")


def get_non_empty_input(prompt: str) -> str:
    """
    ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ string ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    """
    while True:
        value = input(prompt).strip()
        if value:
            return value
        print("‚ùå Error: Input cannot be empty!")


def main():
    manager = ProductManager()

    while True:
        try:
            print("\nüìå Product Management System")
            print("1Ô∏è‚É£ Add Product")
            print("2Ô∏è‚É£ Remove Product")
            print("3Ô∏è‚É£ Update Product Price")
            print("4Ô∏è‚É£ Show Products")
            print("5Ô∏è‚É£ Exit")

            choice = input("Enter your choice: ").strip()

            if choice == "1":
                product_id = get_non_empty_input("Enter Product ID: ")
                name = get_non_empty_input("Enter Product Name: ")
                price = get_valid_float("Enter Product Price: ")
                manager.add_product(Product(product_id, name, price))
            elif choice == "2":
                product_id = get_non_empty_input("Enter Product ID to Remove: ")
                manager.remove_product(product_id)
            elif choice == "3":
                product_id = get_non_empty_input("Enter Product ID to Update: ")
                new_price = get_valid_float("Enter New Price: ")
                manager.update_price(product_id, new_price)
            elif choice == "4":
                manager.show_products()
            elif choice == "5":
                print("üëã Exiting... Have a nice day!")
                sys.exit(0)
            else:
                print("‚ùå Invalid choice! Please try again.")
        except KeyboardInterrupt:
            print("\nüö® Program interrupted. Exiting safely...")
            sys.exit(0)
        except Exception as e:
            print(f"‚ö†Ô∏è Unexpected error: {e}")


if __name__ == "__main__":
    main()
